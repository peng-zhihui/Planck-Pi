#!/bin/sh
set -e

MYNAME="${0##*/}"

report() { echo "${MYNAME}: $*" ; }
report_warn() { report "Warning: $*" >&2 ; }
report_err() { report "Error: $*" >&2 ; }

if [ "$1" = configure ]; then
  addgroup --quiet --system netdev || true
fi

# Generic stuff done on all configurations
if [ "$1" = "configure" ] ; then
  # We don't need loopback interface definition anymore as
  # ifupdown handles loopback interface on its own from now
  if [ ! -f /etc/network/interfaces ] ; then
    if [ -z "$2" ]; then
      echo "Creating /etc/network/interfaces."
      echo "# interfaces(5) file used by ifup(8) and ifdown(8)" > /etc/network/interfaces
      echo "# Include files from /etc/network/interfaces.d:" >> /etc/network/interfaces
      echo "source-directory /etc/network/interfaces.d" >> /etc/network/interfaces
    else
      report_warn "/etc/network/interfaces does not exist"
    fi
  fi
fi

# Automatically added by dh_installdeb/12
dpkg-maintscript-helper rm_conffile /etc/default/ifupdown 0.7\~\+ ifupdown -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init.d/ifupdown 0.7\~\+ ifupdown -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init.d/ifupdown-clean 0.7\~beta1 ifupdown -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init/networking.conf 0.8.25\~ ifupdown -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init/network-interface-container.conf 0.8.25\~ ifupdown -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init/network-interface-security.conf 0.8.25\~ ifupdown -- "$@"
dpkg-maintscript-helper rm_conffile /etc/init/network-interface.conf 0.8.25\~ ifupdown -- "$@"
dpkg-maintscript-helper rm_conffile /etc/network/if-up.d/upstart 0.8.29\~ ifupdown -- "$@"
dpkg-maintscript-helper rm_conffile /etc/network/if-down.d/upstart 0.8.29\~ ifupdown -- "$@"
# End automatically added section
# Automatically added by dh_installinit/12
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -x "/etc/init.d/networking" ]; then
		update-rc.d networking defaults >/dev/null || exit 1
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/12
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'networking.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'networking.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'networking.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'networking.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/12
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if deb-systemd-helper debian-installed 'ifupdown-wait-online.service'; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper unmask 'ifupdown-wait-online.service' >/dev/null || true

		if deb-systemd-helper --quiet was-enabled 'ifupdown-wait-online.service'; then
			# Create new symlinks, if any.
			deb-systemd-helper enable 'ifupdown-wait-online.service' >/dev/null || true
		fi
	fi

	# Update the statefile to add new symlinks (if any), which need to be cleaned
	# up on purge. Also remove old symlinks.
	deb-systemd-helper update-state 'ifupdown-wait-online.service' >/dev/null || true
fi
# End automatically added section

